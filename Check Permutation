For a given two strings, 'str1' and 'str2', check whether they are a permutation of each other or not.Permutations of each other
Two strings are said to be a permutation of each other when either of the string's characters can be rearranged so that it becomes identical to the other one.

Example: 
str1= "sinrtg" 
str2 = "string"

The character of the first string(str1) can be rearranged to form str2 and hence we can say that the given strings are a permutation of each other.
Sample Input 1:
abcde
baedc
Sample Output 1:
true
Sample Input 2:
abc
cbd
Sample Output 2:
false
*****************************CODE EXPLAINATION***************
bool isPermutation(char input1[], char input2[]) {
    int freq_array[256],i;
    freq_array[256]={0};
    bool a=true;
    
    int l1=strlen(input1);// we should not use strlen function directly in the loop 
    int l2=strlen(input2); //because it again and again count the length of string and takes more time
    
    //check if length is unequal of both strings then return false
    if(l1!=l2)return false;
    
     //created an frequency array with 0 at every place
    for(i=0;i<256; i++)
    	freq_array[i]=0;
    
    for(i=0; i<l1; i++)
        freq_array[input1[i]]++;
    
    for(i=0; i<l1; i++)
        freq_array[input2[i]]--;
    
    for(i=0; i<256; i++)
    {
        if(freq_array[i])
         return   false;
    }
    return true;
}
